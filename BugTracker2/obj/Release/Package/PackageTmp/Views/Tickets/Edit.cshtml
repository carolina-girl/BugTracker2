@model BugTracker2.Models.Tickets

@{
    ViewBag.Title = "Edit";
    var ProjectTitle = ViewBag.ProjectTitle;
    var TicketType = ViewBag.TicketType;
    string[] ProjectTypes = new[] { "Bug", "Feature Request", "Documentation" };

}



<div class="row">
    <div class="col-lg-6 col-lg-offset-3">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4>Edit Ticket for: @ProjectTitle</h4>
            </div>
            <div class="panel-body">
                <div class="col-md-12 subnav">
                    <h4>Ticket: @Model.Title</h4>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()


                        <div class="form-horizontal">

                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Project, new { })
                            @Html.HiddenFor(model => model.StatusId)
                            @Html.HiddenFor(model => model.userId)
                            @Html.HiddenFor(model => model.OwnerId)
                            @Html.HiddenFor(model => model.ProjectId)
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.Created)


                            @*<div class="form-group">
                                    @Html.HiddenFor(model => model.OwnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.OwnerId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OwnerId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            @*<div class="form-group">
                                    @Html.HiddenFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.HiddenFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Body, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Body, 4, 50, new { @class = "form-control", style = "max-width:50%" })
                                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <p>
                                    @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                                    {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StatusId, "Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                    }
                                    </p>

                            <p>
                                @*@if (User.IsInRole("ProjectManager") || User.IsInRole("Admin") || User.IsInRole("Submitter"))
                                    {*@
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("PriorityId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*}*@
                            </p>

                            <p>
                                @*@if (User.IsInRole("ProjectManager") || User.IsInRole("Admin") || User.IsInRole("Submitter"))
                                    {*@
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*}*@
                            </p>

                            <p>
                                @if (User.IsInRole("ProjectManager"))
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AssignedUserId, "Assigned User", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("AssignedUserId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.AssignedUserId, "", new { @class = "text-danger" }, null)
                                        </div>
                                    </div>
                                }
                            </p>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-primary btn-default" />
                            @if (Request.IsAuthenticated && User.IsInRole("Developer") || (Request.IsAuthenticated && User.IsInRole("ProjectManager")))
                            {
                                <h5>@Html.ActionLink("Close", "Close", "Tickets", new { id = Model.Id }, new { @class = "btn btn-danger btn-default", @style = "color:white" })</h5>
                            }
                        </div>
                       </div>
                     </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    <h5>@Html.ActionLink("Back to List", "Index", "Tickets", new { id = Model.Id }, new { @class = "btn btn-success btn-sm", @style = "color:white" })</h5>
</div>




