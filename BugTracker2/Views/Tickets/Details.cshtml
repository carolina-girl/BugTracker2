@model BugTracker2.Models.Tickets

@{
    ViewBag.Title = "Details";
}

<br/>
<br/>
<br/>


@Html.ValidationSummary(false, "", new { @class = "text-danger" })
@if (ViewBag.HasTicketPermission)
{



<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h3>Project: @Html.ActionLink(Model.Project.Title, "Details", "Projects", new { id = Model.ProjectId }, null)</h3>
            <h4>@Model.Title</h4>
            <h4>Created By: @Model.Owner.DisplayName on @Model.Created.ToString("MM/dd/yyyy")</h4>
            @if (Model.Updated.HasValue)
            {
                <h4 class="text-danger">Updated on @Model.Updated.Value.ToString("MM/dd/yyyy")</h4>
            }

            @if (Model.AssignedUserId != null)
            {
                <h5>Assigned To: @Model.AssignedUser.DisplayName</h5>
            }
            else
            {
                <h3>Assigned To: <span class="text-danger">Unassigned</span></h3>
            }
        </div>

    
        <div class="col-md-offset-1 col-md-5">
            <h5>Type: @Model.TypeId</h5>
            <h5>Priority: @Model.PriorityId</h5>
            <h5>Status: @Model.StatusId</h5>
        </div>
        <div class="col-md-6">
            <h5>Description: </h5>
            <p>@Model.Body</p>
        </div>
     @*@if (!Model.Status.ToString().Equals("Closed"))
     {
         if (ViewContext.HttpContext.User.IsInRole("ProjectManager"))
         {
        @Html.ActionLink("Assign User", "AssignedUserId", new { id = Model.Id }, new { @class = "action-btn" })
        @Html.ActionLink("Close", "Close", new { id = Model.Id }, new { @class = "action-btn" })
         }
         if (ViewBag.UserId == Model.AssignedUserId || ViewBag.UserId == Model.OwnerId || ViewContext.HttpContext.User.IsInRole("ProjectManager"))
         {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "action-btn" })
         }
     }*@
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h4 class="attachment">Comments</h4>
                    @using (Html.BeginForm("Create", "Comments", FormMethod.Post))
                    {
                      @Html.AntiForgeryToken()
                            <input type="hidden" name="TicketsId" value="@Model.Id" />
                            <textarea name="Body" id="styled" onfocus="this.value = ''; setbg('#8B0000');" onblur="setbg('white')">Enter your comment here...</textarea>
                            <input type="submit" id="submitComment" value="Add Comment" class="btn btn-default action-link" />
                    }
                            @foreach (var comment in Model.Comments)
                            {
                                <ul class="comment">
                                    <li>Posted by @comment.User.DisplayName at @comment.Created.ToString("MM/dd/yyyy")</li>
                                    <li>@comment.Body</li>
                                </ul>
                                <div class="col-md-6">
                                    @*@if (ViewBag.UserId == @comment.SubmitterId || ViewContext.HttpContext.User.IsInRole("ProjectManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
                                        {
                                           using (Html.BeginForm("DeleteComment", "Tickets", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this comment?')" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="Id" value="@comment.Id" />
                                                <input type="hidden" name="TicketId" value="@comment.TicketsId" />
                                                <div class="form-group comment-btn-delete">
                                                    <input type="submit" value="Delete" class="delete" />
                                                </div>
                                            }
                                            <p>
                                                @Html.ActionLink("Edit", "Edit", "Comments", new { id = comment.Id }, null) |
                                                @Html.ActionLink("Delete", "Delete", "Comments", new { id = comment.Id }, null)
                                            </p>
                                        }*@
                                </div>
                            }
                        </div>
                   </div> 
                </div>
            </div> 

            <div class="row">
                <div class="col-md-6">
                    <h4 class="attachment">Attachments</h4>
          
              @if (ViewBag.UserId == @attachment.SubmitterId || ViewContext.HttpContext.User.IsInRole("ProjectManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
             {
               using (Html.BeginForm("Create", "Attachments", FormMethod.Post, new { enctype = "Multipart/form-data" }))
               {
            <input type="hidden" id="TicketsId" name="TicketsId" value="@Model.Id" />
                        <input name="image" type="file" class="form-control" id="image" />
                        <input type="submit" id="submitAttachment" value="Attachment" class="btn btn-default action-link" />
               }
             foreach (var attachment in Model.Attachments)
             {
             <img src="@attachment.MediaUrl" alt="Attachment Photo" style="max-width:150px" />
             }
             }
          </div>
      </div>
  </div>

    <div class="row">
    <div class="col-md-12">
         <h3>Ticket History: @Html.ActionLink(Model.Title, "Details", new { id = Model.Id })</h3>
            </div>
                <div class="row">
                    <div class="col-md-12">
                        @{ var ticketHistory = Model.History; }
                        @foreach (var history in ticketHistory.Reverse())
                        {
                            <h5>@history.Date.ToString("MM/dd/yyyy")M</h5>
                            <p>@Html.Raw(history.Body)</p>
                        }
                    </div>
                </div>
            </div>

    <p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id })*@
    @Html.ActionLink("Back to List", "Index", "Tickets", new { id = Model.Id }, null)
   </p>
  }
  else
{
<br/>  <br/>

}

