@model BugTracker2.Models.Tickets


@{
    ViewBag.Title = "Details";
}

<div class="col-md-8 subnav">
    <h1>Ticket: @Model.Title</h1>
</div>


<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h3><strong>Project</strong>: @Html.ActionLink(Model.Project.Title, "Details", "Projects", new { id = Model.ProjectId }, null)</h3>
            <h4><strong>Created By</strong>: @Model.Owner.FullName on @Model.Created.ToString("MMMM dd, yyyy h:mm t")M</h4>
            @if (Model.Updated.HasValue)
            {
                <h4 class="text-danger">Updated on @Model.Updated.Value.ToString("MMMM dd, yyyy h:mm t")M - @Html.ActionLink("View History", "History", new { id = Model.Id })</h4>
            }
            @if (Model.AssignedUserId != null)
            {
                <h3><strong>Assigned To</strong>: @Model.AssignedUser.FullName</h3>
            }
            else
            {
                <h4><strong>Assigned To</strong>: <span class="text-danger">Unassigned</span></h4>
            }
        </div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <div class="col-md-offset-1 col-md-5">
            <h4>Type: @Html.DisplayFor(modelItem => Model.Type.Type)</h4>
            <h4>Priority: @Html.DisplayFor(modelItem => Model.Priority.Priority)</h4>
            <h4>Status: @Html.DisplayFor(modelItem => Model.Status.Status)</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>DESCRIPTION</h4>
            <p>@Model.Body</p>
        </div>
    </div>
    <hr />
    <hr />

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="attachment">Comments</h3>
                </div>
                <div class="col-md-6">
                    @if (!Model.Status.ToString().Equals("Closed"))
                    {
                        @Html.ActionLink("New Comment", "Create", "Comments", new { id = Model.Id }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
            @{ var comments = Model.Comments; }
            @foreach (var comment in comments)
            {
                <div class="comment">
                    <h4>Posted by @comment.User.LastName on @comment.Created.ToString("M/d/yyyy")</h4>
                    <p>@comment.Body</p>
                    @if (ViewBag.UserId == @comment.UserId || ViewContext.HttpContext.User.IsInRole("Project Manager") || ViewContext.HttpContext.User.IsInRole("Admin"))
                    {
                        using (Html.BeginForm("Delete", "Comments", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this comment?')" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="Id" value="@comment.Id" />
                            <input type="hidden" name="TicketsId" value="@comment.TicketsId" />
                            <div class="form-group comment-btn-delete">
                                <input type="submit" value="Delete" class="delete" />
                            </div>
                        }
                    }
                </div>
            }
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="attachment">Attachments</h3>
                </div>
                <div class="col-md-6">
                    @if (!Model.Status.ToString().Equals("Closed"))
                    {
                        @Html.ActionLink("New Attachment", "Create", "Attachments", new { id = Model.Id }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
            @{ var attachments = Model.Attachments; }
            @foreach (var attachment in attachments)
            {
                <div class="col-md-12">
                    <p>
                        @if (attachment.MediaUrl.Contains(".pdf") || attachment.MediaUrl.Contains(".doc"))
                        {
                            <a href="@attachment.MediaUrl">@*<img src="~/Content/Images/document.png" class="img-responsive">*@Document</a>

                        }
                        else
                        {
                            <a href="@attachment.MediaUrl">@*<img class="img-responsive" src="@attachment.MediaURL">*@Image</a>
                        } - @if (@attachment.UserId != null)
                        {<span class="author">Posted by @attachment.User.FullName</span>}
                    </p>
                    <p>@attachment.Body</p>

                </div>
                <div class="col-md-12">
                    @if (ViewBag.UserId == @attachment.UserId || ViewContext.HttpContext.User.IsInRole("ProjectManager") || ViewContext.HttpContext.User.IsInRole("Admin"))
                    {

                        using (Html.BeginForm("Delete", "Attachments", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this attachment?')" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="Id" value="@attachment.Id" />
                            <input type="hidden" name="TicketId" value="@attachment.TicketsId" />
                            <div class="form-group comment-btn-delete">
                                <input type="submit" value="Delete" class="delete" />
                            </div>
                        }
                    }
                </div>
            }
        </div>

    </div>
</div>
<p>
    @Html.ActionLink("Back to List", "Index", "Tickets")
</p>

 


